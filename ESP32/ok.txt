#include <Arduino.h>

#include <WiFi.h>
#include <HTTPClient.h>

#define RED_PIN 25 // GIOP21 pin connected to button

// Variables will change:
int lastState = HIGH; // the previous state from the input pin
int currentState;     // the current reading from the input pin

const char* ssid = "HeikoFaustine";
const char* password = "01234567";

void connected_to_ap(WiFiEvent_t wifi_event, WiFiEventInfo_t wifi_info){
  //Code
  Serial.println("\nConnected to the WiFi network");
}

void got_ip_from_ap(WiFiEvent_t wifi_event, WiFiEventInfo_t wifi_info){
  Serial.print("Local ESP32 IP: ");
  Serial.println(WiFi.localIP());
}


void WiFiStationDisconnected(WiFiEvent_t wifi_event, WiFiEventInfo_t wifi_info){
  Serial.print("Disconnect from WiFi ");
  Serial.print("WiFi lost connection. Reason: ");
  Serial.println(wifi_info.wifi_sta_disconnected.reason);
  Serial.println("Trying to Reconnect");
  WiFi.begin(ssid, password);
}



void loop() {

  Serial.println("Coucou");
  delay(1000);

  /*if(lastState == LOW && currentState == HIGH) {
    Serial.println("The state changed from LOW to HIGH");
    digitalWrite(19, HIGH);
    if(WiFi.status()== WL_CONNECTED){
      HTTPClient http;

      String serverPath = serverName + "press";
      http.begin(serverPath.c_str());

      int httpResponseCode = http.GET();
      if (httpResponseCode>0) {
        Serial.print("HTTP Response code: ");
        Serial.println(httpResponseCode);
        String payload = http.getString();
        Serial.println(payload);
      }
      else {
        Serial.print("Error code: ");
        Serial.println(httpResponseCode);
      }

      http.end();
      }
    }
  lastState = currentState;*/
}

void setup() {
  Serial.begin(115200);
  // initialize the pushbutton pin as an pull-up input
  
  /*pinMode(RED_PIN, OUTPUT);

  WiFi.begin(ssid, password);
  WiFi.mode(WIFI_STA); //Optional
  WiFi.onEvent(connected_to_ap,  WiFiEvent_t::ARDUINO_EVENT_WIFI_STA_CONNECTED );
  WiFi.onEvent(got_ip_from_ap, WiFiEvent_t::ARDUINO_EVENT_WIFI_STA_GOT_IP);
  WiFi.onEvent(WiFiStationDisconnected, WiFiEvent_t::ARDUINO_EVENT_WIFI_STA_DISCONNECTED);*/
}